[{"E:\\reactcourse\\responsive\\figma-to-code-responsive-web\\src\\index.js":"1","E:\\reactcourse\\responsive\\figma-to-code-responsive-web\\src\\App.js":"2","E:\\reactcourse\\responsive\\figma-to-code-responsive-web\\src\\views\\Home\\index.js":"3","E:\\reactcourse\\responsive\\figma-to-code-responsive-web\\src\\layouts\\Header\\index.js":"4","E:\\reactcourse\\responsive\\figma-to-code-responsive-web\\src\\views\\Home\\Main1.js":"5","E:\\reactcourse\\responsive\\figma-to-code-responsive-web\\src\\views\\Home\\Main2.js":"6","E:\\reactcourse\\responsive\\figma-to-code-responsive-web\\src\\views\\Home\\Main3.js":"7"},{"size":219,"mtime":1609159339617,"results":"8","hashOfConfig":"9"},{"size":162,"mtime":1609160568159,"results":"10","hashOfConfig":"9"},{"size":348,"mtime":1609353665418,"results":"11","hashOfConfig":"9"},{"size":2754,"mtime":1609262829130,"results":"12","hashOfConfig":"9"},{"size":4786,"mtime":1609287775999,"results":"13","hashOfConfig":"9"},{"size":4233,"mtime":1609355040363,"results":"14","hashOfConfig":"9"},{"size":1501,"mtime":1609357509007,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"6ca2db",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\reactcourse\\responsive\\figma-to-code-responsive-web\\src\\index.js",[],["33","34"],"E:\\reactcourse\\responsive\\figma-to-code-responsive-web\\src\\App.js",[],"E:\\reactcourse\\responsive\\figma-to-code-responsive-web\\src\\views\\Home\\index.js",[],"E:\\reactcourse\\responsive\\figma-to-code-responsive-web\\src\\layouts\\Header\\index.js",["35","36"],"import {\r\n  Button,\r\n  createMuiTheme,\r\n  Grid,\r\n  MuiThemeProvider,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport styles from \"./Header.module.css\";\r\nimport logo from \"../../assets/images/Layout/Header/icon.webp\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst Header = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  console.log(window.pageXOffset);\r\n\r\n  const theme = createMuiTheme({\r\n    breakpoints: {\r\n      values: {\r\n        xs: 0,\r\n        sm: 670,\r\n        // md: 600,\r\n        // lg: 900,\r\n        // xl: 1200\r\n      },\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <MuiThemeProvider theme={theme}>\r\n        <Grid container>\r\n          {/* LOGO */}\r\n          <Grid item xs={3} sm={3} className={styles.logoContainer}>\r\n            <div\r\n              className={styles.bar}\r\n              onClick={() => {\r\n                setIsOpen(true);\r\n              }}\r\n            >\r\n              <MenuIcon />\r\n            </div>\r\n\r\n            <img\r\n              src={logo}\r\n              loading=\"lazy\"\r\n              alt=\"Logo\"\r\n              className={styles.logoimage}\r\n            />\r\n            <h3 className={styles.logoText}>Grid</h3>\r\n          </Grid>\r\n          {/* NAVBAR */}\r\n          <Grid item xs={5} sm={7} className={styles.navbarContainer}>\r\n            <ul className={styles.ul}>\r\n              <li className={styles.li}>How it works</li>\r\n              <span className={styles.yellowdot}>.</span>\r\n              <li className={styles.li}>Who we are</li>\r\n              <span className={styles.yellowdot}>.</span>\r\n              <li className={styles.li}>What we do</li>\r\n              <span className={styles.yellowdot}>.</span>\r\n              <li className={styles.li}>Contact us</li>\r\n            </ul>\r\n          </Grid>\r\n          {/* Sign In */}\r\n          <Grid item xs={4} sm={2} className={styles.buttonContainer}>\r\n            <a href=\"#\" className={styles.button}>\r\n              Sign In\r\n            </a>\r\n          </Grid>\r\n        </Grid>\r\n      </MuiThemeProvider>\r\n      <div id={isOpen ? \"active\" : \"\"} className={styles.sidebar}>\r\n        <ul className={styles.sideUL}>\r\n          <li\r\n            className={styles.sideClose}\r\n            onClick={() => {\r\n              setIsOpen(false);\r\n            }}\r\n          >\r\n            <CloseIcon fontSize=\"large\" />\r\n          </li>\r\n          <li className={styles.li}>How it works</li>\r\n          <li className={styles.li}>Who we are</li>\r\n          <li className={styles.li}>What we do</li>\r\n          <li className={styles.li}>Contact us</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","E:\\reactcourse\\responsive\\figma-to-code-responsive-web\\src\\views\\Home\\Main1.js",["37","38"],"import { CardMedia, Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport styles from \"./Main1.module.css\";\r\nimport LeftImage1 from \"../../assets/images/Home/LeftImage1.webp\";\r\nimport RightImage1 from \"../../assets/images/Home/RightImage1.webp\";\r\nimport RightImage2 from \"../../assets/images/Home/RightImage2.webp\";\r\nimport RightImage3 from \"../../assets/images/Home/RightImage3.webp\";\r\nimport RightImage4 from \"../../assets/images/Home/RightImage4.webp\";\r\nimport RightImage5 from \"../../assets/images/Home/RightImage5.webp\";\r\nimport RightImage6 from \"../../assets/images/Home/RightImage6.webp\";\r\n\r\nconst Main1 = () => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container>\r\n        <Grid item xs={12} className={styles.txtLine}>\r\n          <h1 className={styles.h1_1}>\r\n            Combine&nbsp;\r\n            <span class={styles.redText}>\r\n              fine <span> </span>\r\n            </span>\r\n            images\r\n          </h1>\r\n          <br />\r\n          <h1 className={styles.h1_2}>To represent a product</h1>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <div className={styles.carts}>\r\n            <div className={styles.cartsLeft}>\r\n              <p className={styles.leftWrap}>\r\n                Use mixed grid with imagery, replace with your own photos and\r\n                descriptions\r\n              </p>\r\n              <div className={styles.leftImgContainer}>\r\n                <div className={styles.leftImg1Text}>\r\n                  <h1>We aimed to deliver HQ templates for Figma</h1>\r\n                  <p>Used by 123 people</p>\r\n                </div>\r\n                <img\r\n                  className={styles.leftImg1}\r\n                  src={LeftImage1}\r\n                  alt=\"card-1\"\r\n                  loading=\"lazy\"\r\n                />\r\n              </div>\r\n              <a href=\"#\" className={styles.button}>\r\n                Learn more\r\n              </a>\r\n            </div>\r\n            <div className={styles.cartsRight}>\r\n              <div className={styles.topBox}>\r\n                <div className={styles.rightImgContainer1}>\r\n                  <div className={styles.rightImg1Text}>\r\n                    <h1>Consider it done!</h1>\r\n                  </div>\r\n                  <img\r\n                    className={styles.rightImg1}\r\n                    src={RightImage1}\r\n                    alt=\"card-1\"\r\n                    loading=\"lazy\"\r\n                  />\r\n                </div>\r\n                <div className={styles.topBoxInContainer}>\r\n                  <div className={styles.boxInRow1}>\r\n                    <p>\r\n                      This is multipurpose grid, it fits for portfolio, services\r\n                      or agency web site\r\n                    </p>\r\n                  </div>\r\n                  <div className={styles.boxInRow2}>\r\n                    <div className={styles.rightImgContainer2}>\r\n                      <img\r\n                        className={styles.rightImg2}\r\n                        src={RightImage2}\r\n                        alt=\"card-2\"\r\n                        loading=\"lazy\"\r\n                      />\r\n                    </div>\r\n                    <div className={styles.rightImgContainer2}>\r\n                      <img\r\n                        className={styles.rightImg2}\r\n                        src={RightImage3}\r\n                        alt=\"card-3\"\r\n                        loading=\"lazy\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className={styles.bottomBox}>\r\n                <div className={styles.rightImgContainer4}>\r\n                  <img\r\n                    className={styles.rightImg4}\r\n                    src={RightImage4}\r\n                    alt=\"card-4\"\r\n                    loading=\"lazy\"\r\n                  />\r\n                </div>\r\n                <div className={styles.rightImgContainer5}>\r\n                  <div className={styles.rightImg5Text}>\r\n                    <h1>See my goal?</h1>\r\n                  </div>\r\n                  <img\r\n                    className={styles.rightImg5}\r\n                    src={RightImage5}\r\n                    alt=\"card-5\"\r\n                    loading=\"lazy\"\r\n                  />\r\n                </div>\r\n                <div className={styles.rightImgContainer6}>\r\n                  <img\r\n                    className={styles.rightImg6}\r\n                    src={RightImage6}\r\n                    alt=\"card-6\"\r\n                    loading=\"lazy\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main1;\r\n","E:\\reactcourse\\responsive\\figma-to-code-responsive-web\\src\\views\\Home\\Main2.js",["39","40","41","42"],"E:\\reactcourse\\responsive\\figma-to-code-responsive-web\\src\\views\\Home\\Main3.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":2,"column":3,"nodeType":"49","messageId":"50","endLine":2,"endColumn":9},{"ruleId":"51","severity":1,"message":"52","line":66,"column":13,"nodeType":"53","endLine":66,"endColumn":51},{"ruleId":"47","severity":1,"message":"54","line":1,"column":10,"nodeType":"49","messageId":"50","endLine":1,"endColumn":19},{"ruleId":"51","severity":1,"message":"52","line":49,"column":15,"nodeType":"53","endLine":49,"endColumn":53},{"ruleId":"51","severity":1,"message":"52","line":53,"column":15,"nodeType":"53","endLine":53,"endColumn":57},{"ruleId":"51","severity":1,"message":"52","line":68,"column":15,"nodeType":"53","endLine":68,"endColumn":57},{"ruleId":"51","severity":1,"message":"52","line":83,"column":15,"nodeType":"53","endLine":83,"endColumn":57},{"ruleId":"51","severity":1,"message":"52","line":98,"column":15,"nodeType":"53","endLine":98,"endColumn":57},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'CardMedia' is defined but never used.","no-global-assign","no-unsafe-negation"]